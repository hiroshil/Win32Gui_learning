from ctypes import windll, cast, c_void_p, c_uint, c_int, c_char_p
# code generated by AI and edited by me

# Define the prototype for GetClipboardData
user32 = windll.user32
kernel32 = windll.kernel32

OpenClipboard = user32.OpenClipboard
OpenClipboard.argtypes = [c_void_p]  #HWND
OpenClipboard.restype = c_int

GetClipboardData = user32.GetClipboardData
GetClipboardData.argtypes = [c_uint]
GetClipboardData.restype = c_void_p

CloseClipboard = user32.CloseClipboard
CloseClipboard.argtypes = []
CloseClipboard.restype = c_int

GlobalLock = kernel32.GlobalLock
GlobalLock.argtypes = [c_void_p]
GlobalLock.restype = c_void_p

GlobalUnlock = kernel32.GlobalUnlock
GlobalUnlock.argtypes = [c_void_p]
GlobalUnlock.restype = c_int

CF_TEXT = 1

def get_clipboard_data():
    if OpenClipboard(None):
        try:
            hMem = GetClipboardData(CF_TEXT)
            if hMem:
              pData = GlobalLock(hMem)
              if pData:
                data = cast(pData, c_char_p)
                text = data.value.decode('utf-8')  # Decode assuming UTF-8
                GlobalUnlock(hMem)
                return text
        finally:
            CloseClipboard()
    return None


# Example usage:
clipboard_content = get_clipboard_data()

if clipboard_content:
  print("Clipboard content:\n", clipboard_content)
else:
  print("Failed to retrieve clipboard content.")